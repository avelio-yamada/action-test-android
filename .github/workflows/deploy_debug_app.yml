name: Deploy Debug App to Google Play

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Deploy Debug App to Google Play
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: gradle

    - name: Set up Ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: "2.x"

    - name: Gem caching
      id: gem_cache
      uses: actions/cache@v2
      continue-on-error: true
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - name: Cache Gradle packages
      id: cache_gradle_packages
      uses: actions/cache@v2
      continue-on-error: true
      with:
        path: |
          ~/.gradle/caches/modules-*
          ~/.gradle/caches/jars-*
          ~/.gradle/caches/build-cache-*
        key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}

    - name: Bundle Install
      run: |
        gem install bundler:1.17.2
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Config Path
      run: |
        json_path=$GITHUB_WORKSPACE/app/play_config.json
        echo "::set-output name=JSON_PATH::${json_path}"
      id: config-path

    - name: Keystore Path
      run: |
        store_path=$GITHUB_WORKSPACE/app/release.keystore
        echo "::set-output name=STORE_PATH::${store_path}"
      id: store-path

    - name: Import Keystore and Config File
      run: |
        echo "${{ secrets.PLAY_CONFIG }}" > play_config.txt
        base64 --decode play_config.txt > ${{ steps.config-path.outputs.JSON_PATH }}
        echo "${{ secrets.STORE_FILE }}" > release.txt
        base64 --decode release.txt > ${{ steps.store-path.outputs.STORE_PATH }}

    - name: Upload Google Play
      env:
        CONFIG_JSON: ${{ steps.config-path.outputs.JSON_PATH }}
        STORE_FILE: ${{ steps.store-path.outputs.STORE_PATH }}
        STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      run: bundle exec fastlane deploy_debug
